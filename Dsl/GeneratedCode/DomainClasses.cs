//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.DRQPJPFMAMPracticaDSLTools
{
	/// <summary>
	/// DomainClass Tapiz
	/// The root in which all other elements are embedded. Appears as a diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Tapiz.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Tapiz.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("94680262-0d38-4319-bd78-7fc594548956")]
	public partial class Tapiz : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Tapiz domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x94680262, 0x0d38, 0x4319, 0xbd, 0x78, 0x7f, 0xc5, 0x94, 0x54, 0x89, 0x56);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Tapiz(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Tapiz(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Elements opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Elements.
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Entidad> Elements
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Entidad>, Entidad>(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades.TapizDomainRoleId);
			}
		}
		#endregion
		#region Relacion opposite domain role accessor
		
		/// <summary>
		/// Gets a list of Relacion.
		/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion.Tapiz
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Relacion> Relacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Relacion>, Relacion>(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion.TapizDomainRoleId);
			}
		}
		#endregion
		#region AtributoRelacion opposite domain role accessor
		
		/// <summary>
		/// Gets a list of AtributoRelacion.
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion.Tapiz
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<AtributoRelacion> AtributoRelacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<AtributoRelacion>, AtributoRelacion>(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion.TapizDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoRelacion.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad.DomainClassId)) 
				{
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoRelacion sourceAtributoRelacion1 = sourceElement as global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoRelacion;
			if (sourceAtributoRelacion1 != null)
			{
				// Create link for path TapizHasAtributoRelacion.AtributoRelacion
				this.AtributoRelacion.Add(sourceAtributoRelacion1);

				return;
			}
				
			global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion sourceRelacion2 = sourceElement as global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion;
			if (sourceRelacion2 != null)
			{
				// Create link for path TapizHasRelacion.Relacion
				this.Relacion.Add(sourceRelacion2);

				return;
			}
				
			global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad sourceEntidad3 = sourceElement as global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad;
			if (sourceEntidad3 != null)
			{
				// Create link for path TapizHasEntidades.Elements
				this.Elements.Add(sourceEntidad3);

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoRelacion sourceAtributoRelacion1 = sourceElement as global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoRelacion;
			if (sourceAtributoRelacion1 != null)
			{
				// Delete link for path TapizHasAtributoRelacion.AtributoRelacion
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion.GetLinks((global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Tapiz)this, sourceAtributoRelacion1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion.TapizDomainRoleId, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion.AtributoRelacionDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion sourceRelacion2 = sourceElement as global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion;
			if (sourceRelacion2 != null)
			{
				// Delete link for path TapizHasRelacion.Relacion
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion.GetLinks((global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Tapiz)this, sourceRelacion2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion.TapizDomainRoleId, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion.RelacionDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad sourceEntidad3 = sourceElement as global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad;
			if (sourceEntidad3 != null)
			{
				// Delete link for path TapizHasEntidades.Elements
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades.GetLinks((global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Tapiz)this, sourceEntidad3))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades.TapizDomainRoleId, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades.ElementDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.DRQPJPFMAMPracticaDSLTools
{
	/// <summary>
	/// DomainClass Entidad
	/// Elements embedded in the model. Appear as boxes on the diagram.
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("e6f4b349-db2e-4c39-894a-0093007b83a2")]
	public partial class Entidad : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Entidad domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xe6f4b349, 0xdb2e, 0x4c39, 0x89, 0x4a, 0x00, 0x93, 0x00, 0x7b, 0x83, 0xa2);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Entidad(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Entidad(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x8a7577d5, 0x4c41, 0x45ac, 0x9e, 0x7c, 0x4f, 0xad, 0xa3, 0x35, 0x2f, 0x1c);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad.Name
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad/Name.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad/Name.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[global::System.ComponentModel.DefaultValue("")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("8a7577d5-4c41-45ac-9e7c-4fada3352f1c")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Entidad.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<Entidad, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Entidad.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Entidad.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Entidad element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Entidad element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Tapiz opposite domain role accessor
		/// <summary>
		/// Gets or sets Tapiz.
		/// </summary>
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades.ElementDomainRoleId) as Tapiz;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades.ElementDomainRoleId, value);
			}
		}
		#endregion
		#region AtributoEntidad opposite domain role accessor
		
		/// <summary>
		/// Gets a list of AtributoEntidad.
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad.Entidad
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<AtributoEntidad> AtributoEntidad
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<AtributoEntidad>, AtributoEntidad>(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad.EntidadDomainRoleId);
			}
		}
		#endregion
		#region ClavePrimaria opposite domain role accessor
		/// <summary>
		/// Gets or sets ClavePrimaria.
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria.Entidad
		/// </summary>
		public virtual ClavePrimaria ClavePrimaria
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria.EntidadDomainRoleId) as ClavePrimaria;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria.EntidadDomainRoleId, value);
			}
		}
		#endregion
		#region RelacionIzquierda opposite domain role accessor
		
		/// <summary>
		/// Gets a list of RelacionIzquierda.
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha.Entidad
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Relacion> RelacionIzquierda
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Relacion>, Relacion>(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha.EntidadDomainRoleId);
			}
		}
		#endregion
		#region RelacionDerecha opposite domain role accessor
		
		/// <summary>
		/// Gets a list of RelacionDerecha.
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda.Entidad
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<Relacion> RelacionDerecha
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<Relacion>, Relacion>(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda.EntidadDomainRoleId);
			}
		}
		#endregion
		#region ElementGroupPrototype Merge methods
		/// <summary>
		/// Returns a value indicating whether the source element represented by the
		/// specified root ProtoElement can be added to this element.
		/// </summary>
		/// <param name="rootElement">
		/// The root ProtoElement representing a source element.  This can be null, 
		/// in which case the ElementGroupPrototype does not contain an ProtoElements
		/// and the code should inspect the ElementGroupPrototype context information.
		/// </param>
		/// <param name="elementGroupPrototype">The ElementGroupPrototype that contains the root ProtoElement.</param>
		/// <returns>true if the source element represented by the ProtoElement can be added to this target element.</returns>
		protected override bool CanMerge(DslModeling::ProtoElementBase rootElement, DslModeling::ElementGroupPrototype elementGroupPrototype)
		{
			if ( elementGroupPrototype == null ) throw new global::System.ArgumentNullException("elementGroupPrototype");
			
			if (rootElement != null)
			{
				DslModeling::DomainClassInfo rootElementDomainInfo = this.Partition.DomainDataDirectory.GetDomainClass(rootElement.DomainClassId);
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoEntidad.DomainClassId)) 
				{
					return true;
				}
				
				if (rootElementDomainInfo.IsDerivedFrom(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.ClavePrimaria.DomainClassId)) 
				{
					// Check that creating a link with this path doesn't cause multiplicity overflow: EntidadHasClavePrimaria.ClavePrimaria
					if (this.ClavePrimaria != null)
					{
						return false;
					}
					return true;
				}
			}
			return base.CanMerge(rootElement, elementGroupPrototype);
		}
		
		/// <summary>
		/// Called by the Merge process to create a relationship between 
		/// this target element and the specified source element. 
		/// Typically, a parent-child relationship is established
		/// between the target element (the parent) and the source element 
		/// (the child), but any relationship can be established.
		/// </summary>
		/// <param name="sourceElement">The element that is to be related to this model element.</param>
		/// <param name="elementGroup">The group of source ModelElements that have been rehydrated into the target store.</param>
		/// <remarks>
		/// This method is overriden to create the relationship between the target element and the specified source element.
		/// The base method does nothing.
		/// </remarks>
		protected override void MergeRelate(DslModeling::ModelElement sourceElement, DslModeling::ElementGroup elementGroup)
		{
			// In general, sourceElement is allowed to be null, meaning that the elementGroup must be parsed for special cases.
			// However this is not supported in generated code.  Use double-deriving on this class and then override MergeRelate completely if you 
			// need to support this case.
			if ( sourceElement == null ) throw new global::System.ArgumentNullException("sourceElement");
		
				
			global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoEntidad sourceAtributoEntidad1 = sourceElement as global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoEntidad;
			if (sourceAtributoEntidad1 != null)
			{
				// Create link for path EntidadHasAtributoEntidad.AtributoEntidad
				this.AtributoEntidad.Add(sourceAtributoEntidad1);

				return;
			}
				
			global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.ClavePrimaria sourceClavePrimaria2 = sourceElement as global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.ClavePrimaria;
			if (sourceClavePrimaria2 != null)
			{
				// Create link for path EntidadHasClavePrimaria.ClavePrimaria
				this.ClavePrimaria = sourceClavePrimaria2;

				return;
			}
		
			// Sdk workaround to runtime bug #879350 (DSL: can't copy and paste a MEL that has a MEX). Avoid MergeRelate on ModelElementExtension
			// during a "Paste".
			if (sourceElement is DslModeling::ExtensionElement
				&& sourceElement.Store.TransactionManager.CurrentTransaction.TopLevelTransaction.Context.ContextInfo.ContainsKey("{9DAFD42A-DC0E-4d78-8C3F-8266B2CF8B33}"))
			{
				return;
			}
		
			// Fall through to base class if this class hasn't handled the merge.
			base.MergeRelate(sourceElement, elementGroup);
		}
		
		/// <summary>
		/// Performs operation opposite to MergeRelate - i.e. disconnects a given
		/// element from the current one (removes links created by MergeRelate).
		/// </summary>
		/// <param name="sourceElement">Element to be unmerged/disconnected.</param>
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1800:DoNotCastUnnecessarily")]
		protected override void MergeDisconnect(DslModeling::ModelElement sourceElement)
		{
			if (sourceElement == null) throw new global::System.ArgumentNullException("sourceElement");
				
			global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoEntidad sourceAtributoEntidad1 = sourceElement as global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoEntidad;
			if (sourceAtributoEntidad1 != null)
			{
				// Delete link for path EntidadHasAtributoEntidad.AtributoEntidad
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad.GetLinks((global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad)this, sourceAtributoEntidad1))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad.EntidadDomainRoleId, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad.AtributoEntidadDomainRoleId);
				}

				return;
			}
				
			global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.ClavePrimaria sourceClavePrimaria2 = sourceElement as global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.ClavePrimaria;
			if (sourceClavePrimaria2 != null)
			{
				// Delete link for path EntidadHasClavePrimaria.ClavePrimaria
				
				foreach (DslModeling::ElementLink link in global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria.GetLinks((global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad)this, sourceClavePrimaria2))
				{
					// Delete the link, but without possible delete propagation to the element since it's moving to a new location.
					link.Delete(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria.EntidadDomainRoleId, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria.ClavePrimariaDomainRoleId);
				}

				return;
			}
			// Fall through to base class if this class hasn't handled the unmerge.
			base.MergeDisconnect(sourceElement);
		}
		#endregion
	}
}
namespace UPM_IPS.DRQPJPFMAMPracticaDSLTools
{
	/// <summary>
	/// DomainClass AtributoEntidad
	/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoEntidad
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoEntidad.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoEntidad.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("e717e51c-6468-4aa1-a182-51ba07caef3a")]
	public partial class AtributoEntidad : Atributo
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// AtributoEntidad domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xe717e51c, 0x6468, 0x4aa1, 0xa1, 0x82, 0x51, 0xba, 0x07, 0xca, 0xef, 0x3a);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public AtributoEntidad(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public AtributoEntidad(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Entidad opposite domain role accessor
		/// <summary>
		/// Gets or sets Entidad.
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad.AtributoEntidad
		/// </summary>
		public virtual Entidad Entidad
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad.AtributoEntidadDomainRoleId) as Entidad;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad.AtributoEntidadDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.DRQPJPFMAMPracticaDSLTools
{
	/// <summary>
	/// DomainClass ClavePrimaria
	/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.ClavePrimaria
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.ClavePrimaria.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.ClavePrimaria.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("3342158e-c28d-4e74-a126-69ccca2b5b36")]
	public partial class ClavePrimaria : Atributo
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// ClavePrimaria domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x3342158e, 0xc28d, 0x4e74, 0xa1, 0x26, 0x69, 0xcc, 0xca, 0x2b, 0x5b, 0x36);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClavePrimaria(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public ClavePrimaria(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Entidad opposite domain role accessor
		/// <summary>
		/// Gets or sets Entidad.
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria.ClavePrimaria
		/// </summary>
		public virtual Entidad Entidad
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria.ClavePrimariaDomainRoleId) as Entidad;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria.ClavePrimariaDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.DRQPJPFMAMPracticaDSLTools
{
	/// <summary>
	/// DomainClass Atributo
	/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.Atributo
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Atributo.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Atributo.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("18ec9d0f-5f08-414f-b84d-d60bdb41efe5")]
	public abstract partial class Atributo : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Atributo domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x18ec9d0f, 0x5f08, 0x414f, 0xb8, 0x4d, 0xd6, 0x0b, 0xdb, 0x41, 0xef, 0xe5);
		/// <summary>
		/// Constructor.
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		protected Atributo(DslModeling::Partition partition, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x10174844, 0xf356, 0x44a6, 0x89, 0x66, 0x5f, 0x99, 0xb9, 0xfa, 0xde, 0xbd);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.Atributo.Name
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Atributo/Name.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Atributo/Name.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("10174844-f356-44a6-8966-5f99b9fadebd")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Atributo.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<Atributo, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Atributo.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Atributo.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Atributo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Atributo element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Tipo domain property code
		
		/// <summary>
		/// Tipo domain property Id.
		/// </summary>
		public static readonly global::System.Guid TipoDomainPropertyId = new global::System.Guid(0x1f07eb18, 0x6011, 0x482c, 0x8a, 0xf5, 0xf1, 0x61, 0xa2, 0x4d, 0x52, 0x6f);
		
		/// <summary>
		/// Storage for Tipo
		/// </summary>
		private TipoAtributo tipoPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of Tipo domain property.
		/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.Atributo.Tipo
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Atributo/Tipo.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Atributo/Tipo.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("1f07eb18-6011-482c-8af5-f161a24d526f")]
		public TipoAtributo Tipo
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return tipoPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				TipoPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Atributo.Tipo domain property.
		/// </summary>
		internal sealed partial class TipoPropertyHandler : DslModeling::DomainPropertyValueHandler<Atributo, TipoAtributo>
		{
			private TipoPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Atributo.Tipo domain property value handler.
			/// </summary>
			public static readonly TipoPropertyHandler Instance = new TipoPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Atributo.Tipo domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return TipoDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed TipoAtributo GetValue(Atributo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.tipoPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Atributo element, TipoAtributo newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				TipoAtributo oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.tipoPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region EsNull domain property code
		
		/// <summary>
		/// EsNull domain property Id.
		/// </summary>
		public static readonly global::System.Guid EsNullDomainPropertyId = new global::System.Guid(0x92c4ff8f, 0x5e40, 0x4288, 0xb5, 0xaf, 0xde, 0xf2, 0x8b, 0x8f, 0xef, 0x8a);
		
		/// <summary>
		/// Storage for EsNull
		/// </summary>
		private global::System.Boolean esNullPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of EsNull domain property.
		/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.Atributo.Es Null
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Atributo/EsNull.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Atributo/EsNull.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("92c4ff8f-5e40-4288-b5af-def28b8fef8a")]
		public global::System.Boolean EsNull
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return esNullPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				EsNullPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Atributo.EsNull domain property.
		/// </summary>
		internal sealed partial class EsNullPropertyHandler : DslModeling::DomainPropertyValueHandler<Atributo, global::System.Boolean>
		{
			private EsNullPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Atributo.EsNull domain property value handler.
			/// </summary>
			public static readonly EsNullPropertyHandler Instance = new EsNullPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Atributo.EsNull domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return EsNullDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.Boolean GetValue(Atributo element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.esNullPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Atributo element, global::System.Boolean newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.Boolean oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.esNullPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
	}
}
namespace UPM_IPS.DRQPJPFMAMPracticaDSLTools
{
	/// <summary>
	/// DomainClass Relacion
	/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel))]
	[global::System.CLSCompliant(true)]
	[global::System.Diagnostics.DebuggerDisplay("{GetType().Name,nq} (Name = {namePropertyStorage})")]
	[DslModeling::DomainObjectId("dc343253-fc7f-4843-8172-a09f94e1bbf5")]
	public partial class Relacion : DslModeling::ModelElement
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// Relacion domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xdc343253, 0xfc7f, 0x4843, 0x81, 0x72, 0xa0, 0x9f, 0x94, 0xe1, 0xbb, 0xf5);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Relacion(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public Relacion(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Name domain property code
		
		/// <summary>
		/// Name domain property Id.
		/// </summary>
		public static readonly global::System.Guid NameDomainPropertyId = new global::System.Guid(0x07c53a4b, 0xd7ab, 0x40a4, 0x82, 0x15, 0x5d, 0x8d, 0x7b, 0x17, 0x03, 0x3b);
		
		/// <summary>
		/// Storage for Name
		/// </summary>
		private global::System.String namePropertyStorage = string.Empty;
		
		/// <summary>
		/// Gets or sets the value of Name domain property.
		/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion.Name
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion/Name.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion/Name.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::ElementName]
		[DslModeling::DomainObjectId("07c53a4b-d7ab-40a4-8215-5d8d7b17033b")]
		public global::System.String Name
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return namePropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				NamePropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Relacion.Name domain property.
		/// </summary>
		internal sealed partial class NamePropertyHandler : DslModeling::DomainPropertyValueHandler<Relacion, global::System.String>
		{
			private NamePropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Relacion.Name domain property value handler.
			/// </summary>
			public static readonly NamePropertyHandler Instance = new NamePropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Relacion.Name domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return NameDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed global::System.String GetValue(Relacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.namePropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Relacion element, global::System.String newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				global::System.String oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.namePropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region CardinalidadIzquierda domain property code
		
		/// <summary>
		/// CardinalidadIzquierda domain property Id.
		/// </summary>
		public static readonly global::System.Guid CardinalidadIzquierdaDomainPropertyId = new global::System.Guid(0x408ba5db, 0x4e7a, 0x4130, 0x91, 0xb9, 0xd8, 0xfb, 0x44, 0xe4, 0xca, 0x72);
		
		/// <summary>
		/// Storage for CardinalidadIzquierda
		/// </summary>
		private Cardinalidad cardinalidadIzquierdaPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of CardinalidadIzquierda domain property.
		/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion.Cardinalidad
		/// Izquierda
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion/CardinalidadIzquierda.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion/CardinalidadIzquierda.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("408ba5db-4e7a-4130-91b9-d8fb44e4ca72")]
		public Cardinalidad CardinalidadIzquierda
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return cardinalidadIzquierdaPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CardinalidadIzquierdaPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Relacion.CardinalidadIzquierda domain property.
		/// </summary>
		internal sealed partial class CardinalidadIzquierdaPropertyHandler : DslModeling::DomainPropertyValueHandler<Relacion, Cardinalidad>
		{
			private CardinalidadIzquierdaPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Relacion.CardinalidadIzquierda domain property value handler.
			/// </summary>
			public static readonly CardinalidadIzquierdaPropertyHandler Instance = new CardinalidadIzquierdaPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Relacion.CardinalidadIzquierda domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CardinalidadIzquierdaDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed Cardinalidad GetValue(Relacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.cardinalidadIzquierdaPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Relacion element, Cardinalidad newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				Cardinalidad oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.cardinalidadIzquierdaPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region CardinalidadDerecha domain property code
		
		/// <summary>
		/// CardinalidadDerecha domain property Id.
		/// </summary>
		public static readonly global::System.Guid CardinalidadDerechaDomainPropertyId = new global::System.Guid(0xf83c65c0, 0x0020, 0x4542, 0xb0, 0x1e, 0x8c, 0x67, 0x63, 0xd7, 0x95, 0xcf);
		
		/// <summary>
		/// Storage for CardinalidadDerecha
		/// </summary>
		private Cardinalidad cardinalidadDerechaPropertyStorage;
		
		/// <summary>
		/// Gets or sets the value of CardinalidadDerecha domain property.
		/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion.Cardinalidad Derecha
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion/CardinalidadDerecha.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion/CardinalidadDerecha.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainObjectId("f83c65c0-0020-4542-b01e-8c6763d795cf")]
		public Cardinalidad CardinalidadDerecha
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return cardinalidadDerechaPropertyStorage;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				CardinalidadDerechaPropertyHandler.Instance.SetValue(this, value);
			}
		}
		/// <summary>
		/// Value handler for the Relacion.CardinalidadDerecha domain property.
		/// </summary>
		internal sealed partial class CardinalidadDerechaPropertyHandler : DslModeling::DomainPropertyValueHandler<Relacion, Cardinalidad>
		{
			private CardinalidadDerechaPropertyHandler() { }
		
			/// <summary>
			/// Gets the singleton instance of the Relacion.CardinalidadDerecha domain property value handler.
			/// </summary>
			public static readonly CardinalidadDerechaPropertyHandler Instance = new CardinalidadDerechaPropertyHandler();
		
			/// <summary>
			/// Gets the Id of the Relacion.CardinalidadDerecha domain property.
			/// </summary>
			public sealed override global::System.Guid DomainPropertyId
			{
				[global::System.Diagnostics.DebuggerStepThrough]
				get
				{
					return CardinalidadDerechaDomainPropertyId;
				}
			}
			
			/// <summary>
			/// Gets a strongly-typed value of the property on specified element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <returns>Property value.</returns>
			public override sealed Cardinalidad GetValue(Relacion element)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
				return element.cardinalidadDerechaPropertyStorage;
			}
		
			/// <summary>
			/// Sets property value on an element.
			/// </summary>
			/// <param name="element">Element which owns the property.</param>
			/// <param name="newValue">New property value.</param>
			public override sealed void SetValue(Relacion element, Cardinalidad newValue)
			{
				if (element == null) throw new global::System.ArgumentNullException("element");
		
				Cardinalidad oldValue = GetValue(element);
				if (newValue != oldValue)
				{
					ValueChanging(element, oldValue, newValue);
					element.cardinalidadDerechaPropertyStorage = newValue;
					ValueChanged(element, oldValue, newValue);
				}
			}
		}
		
		#endregion
		#region Tapiz opposite domain role accessor
		/// <summary>
		/// Gets or sets Tapiz.
		/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion.Relacion
		/// </summary>
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion.RelacionDomainRoleId) as Tapiz;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion.RelacionDomainRoleId, value);
			}
		}
		#endregion
		#region AtributoRelacion opposite domain role accessor
		
		/// <summary>
		/// Gets a list of AtributoRelacion.
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion.Relacion
		/// </summary>
		public virtual DslModeling::LinkedElementCollection<AtributoRelacion> AtributoRelacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return GetRoleCollection<DslModeling::LinkedElementCollection<AtributoRelacion>, AtributoRelacion>(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion.RelacionDomainRoleId);
			}
		}
		#endregion
		#region EntidadDerecha opposite domain role accessor
		/// <summary>
		/// Gets or sets EntidadDerecha.
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha.Relacion
		/// </summary>
		public virtual Entidad EntidadDerecha
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha.RelacionDomainRoleId) as Entidad;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha.RelacionDomainRoleId, value);
			}
		}
		#endregion
		#region EntidadIzquieda opposite domain role accessor
		/// <summary>
		/// Gets or sets EntidadIzquieda.
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda.Relacion
		/// </summary>
		public virtual Entidad EntidadIzquieda
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda.RelacionDomainRoleId) as Entidad;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda.RelacionDomainRoleId, value);
			}
		}
		#endregion
	}
}
namespace UPM_IPS.DRQPJPFMAMPracticaDSLTools
{
	/// <summary>
	/// DomainClass AtributoRelacion
	/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoRelacion
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoRelacion.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoRelacion.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainObjectId("a4eca4ac-7ebb-4bae-a503-b49ffdb56edc")]
	public partial class AtributoRelacion : Atributo
	{
		#region Constructors, domain class Id
	
		/// <summary>
		/// AtributoRelacion domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xa4eca4ac, 0x7ebb, 0x4bae, 0xa5, 0x03, 0xb4, 0x9f, 0xfd, 0xb5, 0x6e, 0xdc);
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public AtributoRelacion(DslModeling::Store store, params DslModeling::PropertyAssignment[] propertyAssignments)
			: this(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new element is to be created.</param>
		/// <param name="propertyAssignments">List of domain property id/value pairs to set once the element is created.</param>
		public AtributoRelacion(DslModeling::Partition partition, params DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, propertyAssignments)
		{
		}
		#endregion
		#region Tapiz opposite domain role accessor
		/// <summary>
		/// Gets or sets Tapiz.
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion.AtributoRelacion
		/// </summary>
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion.AtributoRelacionDomainRoleId) as Tapiz;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion.AtributoRelacionDomainRoleId, value);
			}
		}
		#endregion
		#region Relacion opposite domain role accessor
		/// <summary>
		/// Gets or sets Relacion.
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion.AtributoRelacion
		/// </summary>
		public virtual Relacion Relacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return DslModeling::DomainRoleInfo.GetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion.AtributoRelacionDomainRoleId) as Relacion;
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetLinkedElement(this, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion.AtributoRelacionDomainRoleId, value);
			}
		}
		#endregion
	}
}
