//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.DRQPJPFMAMPracticaDSLTools
{
	/// <summary>
	/// DomainRelationship TapizHasEntidades
	/// Embedding relationship between the Model and Elements
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("aa004876-d25a-44f9-b2af-c677e946ffa6")]
	public partial class TapizHasEntidades : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizHasEntidades domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xaa004876, 0xd25a, 0x44f9, 0xb2, 0xaf, 0xc6, 0x77, 0xe9, 0x46, 0xff, 0xa6);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizHasEntidades link in the same Partition as the given Tapiz
		/// </summary>
		/// <param name="source">Tapiz to use as the source of the relationship.</param>
		/// <param name="target">Entidad to use as the target of the relationship.</param>
		public TapizHasEntidades(Tapiz source, Entidad target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizHasEntidades.TapizDomainRoleId, source), new DslModeling::RoleAssignment(TapizHasEntidades.ElementDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasEntidades(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasEntidades(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasEntidades(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasEntidades(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Tapiz domain role code
		
		/// <summary>
		/// Tapiz domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizDomainRoleId = new global::System.Guid(0xe02e8e26, 0x37ae, 0x4275, 0xb4, 0x41, 0xcd, 0x17, 0xfa, 0xcf, 0xbf, 0xb2);
		
		/// <summary>
		/// DomainRole Tapiz
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades/Tapiz.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades/Tapiz.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Elements", PropertyDisplayNameKey="UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades/Tapiz.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("e02e8e26-37ae-4275-b441-cd17facfbfb2")]
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Tapiz)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Tapiz of a Entidad
		/// <summary>
		/// Gets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Tapiz GetTapiz(Entidad element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ElementDomainRoleId) as Tapiz;
		}
		
		/// <summary>
		/// Sets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapiz(Entidad element, Tapiz newTapiz)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ElementDomainRoleId, newTapiz);
		}
		#endregion
		#region Element domain role code
		
		/// <summary>
		/// Element domain role Id.
		/// </summary>
		public static readonly global::System.Guid ElementDomainRoleId = new global::System.Guid(0x14d5bc4f, 0x47ae, 0x462f, 0x8f, 0xdf, 0xfa, 0x10, 0x90, 0xc0, 0x49, 0xe4);
		
		/// <summary>
		/// DomainRole Element
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades/Element.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades/Element.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Tapiz", PropertyDisplayNameKey="UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades/Element.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("14d5bc4f-47ae-462f-8fdf-fa1090c049e4")]
		public virtual Entidad Element
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Entidad)DslModeling::DomainRoleInfo.GetRolePlayer(this, ElementDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ElementDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Elements of a Tapiz
		/// <summary>
		/// Gets a list of Elements.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Entidad> GetElements(Tapiz element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Entidad>, Entidad>(element, TapizDomainRoleId);
		}
		#endregion
		#region Tapiz link accessor
		/// <summary>
		/// Get the list of TapizHasEntidades links to a Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades> GetLinksToElements ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Tapiz tapizInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades>(tapizInstance, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades.TapizDomainRoleId);
		}
		#endregion
		#region Element link accessor
		/// <summary>
		/// Get the TapizHasEntidades link to a Entidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades GetLinkToTapiz (global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad elementInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades>(elementInstance, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades.ElementDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Element not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizHasEntidades instance accessors
		
		/// <summary>
		/// Get any TapizHasEntidades links between a given Tapiz and a Entidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades> GetLinks( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Tapiz source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades>();
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades>(source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades.TapizDomainRoleId);
			foreach ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades link in links )
			{
				if ( target.Equals(link.Element) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizHasEntidades link between a given Tapizand a Entidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades GetLink( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Tapiz source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades>(source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades.TapizDomainRoleId);
			foreach ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasEntidades link in links )
			{
				if ( target.Equals(link.Element) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.DRQPJPFMAMPracticaDSLTools
{
	/// <summary>
	/// DomainRelationship EntidadHasAtributoEntidad
	/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("9cc850a6-6473-423d-93e0-d478e06e99b5")]
	public partial class EntidadHasAtributoEntidad : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// EntidadHasAtributoEntidad domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x9cc850a6, 0x6473, 0x423d, 0x93, 0xe0, 0xd4, 0x78, 0xe0, 0x6e, 0x99, 0xb5);
	
				
		/// <summary>
		/// Constructor
		/// Creates a EntidadHasAtributoEntidad link in the same Partition as the given Entidad
		/// </summary>
		/// <param name="source">Entidad to use as the source of the relationship.</param>
		/// <param name="target">AtributoEntidad to use as the target of the relationship.</param>
		public EntidadHasAtributoEntidad(Entidad source, AtributoEntidad target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(EntidadHasAtributoEntidad.EntidadDomainRoleId, source), new DslModeling::RoleAssignment(EntidadHasAtributoEntidad.AtributoEntidadDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public EntidadHasAtributoEntidad(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public EntidadHasAtributoEntidad(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public EntidadHasAtributoEntidad(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public EntidadHasAtributoEntidad(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Entidad domain role code
		
		/// <summary>
		/// Entidad domain role Id.
		/// </summary>
		public static readonly global::System.Guid EntidadDomainRoleId = new global::System.Guid(0xe6c7923d, 0x40a6, 0x455e, 0x84, 0xce, 0x61, 0xd4, 0x50, 0x8b, 0xe9, 0x04);
		
		/// <summary>
		/// DomainRole Entidad
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad.Entidad
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad/Entidad.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad/Entidad.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "AtributoEntidad", PropertyDisplayNameKey="UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad/Entidad.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("e6c7923d-40a6-455e-84ce-61d4508be904")]
		public virtual Entidad Entidad
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Entidad)DslModeling::DomainRoleInfo.GetRolePlayer(this, EntidadDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EntidadDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Entidad of a AtributoEntidad
		/// <summary>
		/// Gets Entidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Entidad GetEntidad(AtributoEntidad element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, AtributoEntidadDomainRoleId) as Entidad;
		}
		
		/// <summary>
		/// Sets Entidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetEntidad(AtributoEntidad element, Entidad newEntidad)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, AtributoEntidadDomainRoleId, newEntidad);
		}
		#endregion
		#region AtributoEntidad domain role code
		
		/// <summary>
		/// AtributoEntidad domain role Id.
		/// </summary>
		public static readonly global::System.Guid AtributoEntidadDomainRoleId = new global::System.Guid(0x4fd19830, 0xa69d, 0x45ca, 0xbf, 0xa4, 0xb2, 0xef, 0x07, 0xc8, 0xe7, 0x4c);
		
		/// <summary>
		/// DomainRole AtributoEntidad
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad.AtributoEntidad
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad/AtributoEntidad.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad/AtributoEntidad.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Entidad", PropertyDisplayNameKey="UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad/AtributoEntidad.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("4fd19830-a69d-45ca-bfa4-b2ef07c8e74c")]
		public virtual AtributoEntidad AtributoEntidad
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (AtributoEntidad)DslModeling::DomainRoleInfo.GetRolePlayer(this, AtributoEntidadDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, AtributoEntidadDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access AtributoEntidad of a Entidad
		/// <summary>
		/// Gets a list of AtributoEntidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<AtributoEntidad> GetAtributoEntidad(Entidad element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<AtributoEntidad>, AtributoEntidad>(element, EntidadDomainRoleId);
		}
		#endregion
		#region Entidad link accessor
		/// <summary>
		/// Get the list of EntidadHasAtributoEntidad links to a Entidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad> GetLinksToAtributoEntidad ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad entidadInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad>(entidadInstance, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad.EntidadDomainRoleId);
		}
		#endregion
		#region AtributoEntidad link accessor
		/// <summary>
		/// Get the EntidadHasAtributoEntidad link to a AtributoEntidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad GetLinkToEntidad (global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoEntidad atributoEntidadInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad>(atributoEntidadInstance, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad.AtributoEntidadDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of AtributoEntidad not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region EntidadHasAtributoEntidad instance accessors
		
		/// <summary>
		/// Get any EntidadHasAtributoEntidad links between a given Entidad and a AtributoEntidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad> GetLinks( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoEntidad target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad>();
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad>(source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad.EntidadDomainRoleId);
			foreach ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad link in links )
			{
				if ( target.Equals(link.AtributoEntidad) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one EntidadHasAtributoEntidad link between a given Entidadand a AtributoEntidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad GetLink( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoEntidad target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad>(source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad.EntidadDomainRoleId);
			foreach ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasAtributoEntidad link in links )
			{
				if ( target.Equals(link.AtributoEntidad) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.DRQPJPFMAMPracticaDSLTools
{
	/// <summary>
	/// DomainRelationship EntidadHasClavePrimaria
	/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("bc0d0585-18bf-4f54-9198-567f427b8fff")]
	public partial class EntidadHasClavePrimaria : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// EntidadHasClavePrimaria domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xbc0d0585, 0x18bf, 0x4f54, 0x91, 0x98, 0x56, 0x7f, 0x42, 0x7b, 0x8f, 0xff);
	
				
		/// <summary>
		/// Constructor
		/// Creates a EntidadHasClavePrimaria link in the same Partition as the given Entidad
		/// </summary>
		/// <param name="source">Entidad to use as the source of the relationship.</param>
		/// <param name="target">ClavePrimaria to use as the target of the relationship.</param>
		public EntidadHasClavePrimaria(Entidad source, ClavePrimaria target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(EntidadHasClavePrimaria.EntidadDomainRoleId, source), new DslModeling::RoleAssignment(EntidadHasClavePrimaria.ClavePrimariaDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public EntidadHasClavePrimaria(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public EntidadHasClavePrimaria(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public EntidadHasClavePrimaria(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public EntidadHasClavePrimaria(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Entidad domain role code
		
		/// <summary>
		/// Entidad domain role Id.
		/// </summary>
		public static readonly global::System.Guid EntidadDomainRoleId = new global::System.Guid(0x6deb3feb, 0xa421, 0x45fb, 0x9d, 0xe6, 0xdf, 0xdc, 0x02, 0x6e, 0x02, 0xc8);
		
		/// <summary>
		/// DomainRole Entidad
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria.Entidad
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria/Entidad.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria/Entidad.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "ClavePrimaria", PropertyDisplayNameKey="UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria/Entidad.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("6deb3feb-a421-45fb-9de6-dfdc026e02c8")]
		public virtual Entidad Entidad
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Entidad)DslModeling::DomainRoleInfo.GetRolePlayer(this, EntidadDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EntidadDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Entidad of a ClavePrimaria
		/// <summary>
		/// Gets Entidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Entidad GetEntidad(ClavePrimaria element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ClavePrimariaDomainRoleId) as Entidad;
		}
		
		/// <summary>
		/// Sets Entidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetEntidad(ClavePrimaria element, Entidad newEntidad)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ClavePrimariaDomainRoleId, newEntidad);
		}
		#endregion
		#region ClavePrimaria domain role code
		
		/// <summary>
		/// ClavePrimaria domain role Id.
		/// </summary>
		public static readonly global::System.Guid ClavePrimariaDomainRoleId = new global::System.Guid(0x1bf9a23e, 0x0ce0, 0x4b6e, 0x9d, 0x66, 0x2f, 0x94, 0x43, 0x4b, 0x08, 0xb2);
		
		/// <summary>
		/// DomainRole ClavePrimaria
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria.ClavePrimaria
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria/ClavePrimaria.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria/ClavePrimaria.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Entidad", PropertyDisplayNameKey="UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria/ClavePrimaria.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("1bf9a23e-0ce0-4b6e-9d66-2f94434b08b2")]
		public virtual ClavePrimaria ClavePrimaria
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ClavePrimaria)DslModeling::DomainRoleInfo.GetRolePlayer(this, ClavePrimariaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ClavePrimariaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ClavePrimaria of a Entidad
		/// <summary>
		/// Gets ClavePrimaria.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static ClavePrimaria GetClavePrimaria(Entidad element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, EntidadDomainRoleId) as ClavePrimaria;
		}
		
		/// <summary>
		/// Sets ClavePrimaria.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetClavePrimaria(Entidad element, ClavePrimaria newClavePrimaria)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, EntidadDomainRoleId, newClavePrimaria);
		}
		#endregion
		#region Entidad link accessor
		/// <summary>
		/// Get the EntidadHasClavePrimaria link to a Entidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria GetLinkToClavePrimaria (global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad entidadInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria>(entidadInstance, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria.EntidadDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Entidad not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region ClavePrimaria link accessor
		/// <summary>
		/// Get the EntidadHasClavePrimaria link to a ClavePrimaria.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria GetLinkToEntidad (global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.ClavePrimaria clavePrimariaInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria>(clavePrimariaInstance, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria.ClavePrimariaDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of ClavePrimaria not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region EntidadHasClavePrimaria instance accessors
		
		/// <summary>
		/// Get any EntidadHasClavePrimaria links between a given Entidad and a ClavePrimaria.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria> GetLinks( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.ClavePrimaria target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria>();
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria>(source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria.EntidadDomainRoleId);
			foreach ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria link in links )
			{
				if ( target.Equals(link.ClavePrimaria) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one EntidadHasClavePrimaria link between a given Entidadand a ClavePrimaria.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria GetLink( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.ClavePrimaria target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria>(source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria.EntidadDomainRoleId);
			foreach ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.EntidadHasClavePrimaria link in links )
			{
				if ( target.Equals(link.ClavePrimaria) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.DRQPJPFMAMPracticaDSLTools
{
	/// <summary>
	/// DomainRelationship TapizHasRelacion
	/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("1b179af7-607f-4daf-8a0e-c363c39abca9")]
	public partial class TapizHasRelacion : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizHasRelacion domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x1b179af7, 0x607f, 0x4daf, 0x8a, 0x0e, 0xc3, 0x63, 0xc3, 0x9a, 0xbc, 0xa9);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizHasRelacion link in the same Partition as the given Tapiz
		/// </summary>
		/// <param name="source">Tapiz to use as the source of the relationship.</param>
		/// <param name="target">Relacion to use as the target of the relationship.</param>
		public TapizHasRelacion(Tapiz source, Relacion target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizHasRelacion.TapizDomainRoleId, source), new DslModeling::RoleAssignment(TapizHasRelacion.RelacionDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasRelacion(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasRelacion(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasRelacion(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasRelacion(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Tapiz domain role code
		
		/// <summary>
		/// Tapiz domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizDomainRoleId = new global::System.Guid(0x0118237d, 0x09e4, 0x42de, 0xa8, 0x6e, 0x7c, 0xbb, 0x0d, 0xfc, 0x28, 0x70);
		
		/// <summary>
		/// DomainRole Tapiz
		/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion.Tapiz
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion/Tapiz.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion/Tapiz.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Relacion", PropertyDisplayNameKey="UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion/Tapiz.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("0118237d-09e4-42de-a86e-7cbb0dfc2870")]
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Tapiz)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Tapiz of a Relacion
		/// <summary>
		/// Gets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Tapiz GetTapiz(Relacion element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, RelacionDomainRoleId) as Tapiz;
		}
		
		/// <summary>
		/// Sets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapiz(Relacion element, Tapiz newTapiz)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, RelacionDomainRoleId, newTapiz);
		}
		#endregion
		#region Relacion domain role code
		
		/// <summary>
		/// Relacion domain role Id.
		/// </summary>
		public static readonly global::System.Guid RelacionDomainRoleId = new global::System.Guid(0xc05b701f, 0xf136, 0x454f, 0xbf, 0x9e, 0x0e, 0x52, 0x8c, 0x48, 0xf3, 0xfa);
		
		/// <summary>
		/// DomainRole Relacion
		/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion.Relacion
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion/Relacion.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion/Relacion.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Tapiz", PropertyDisplayNameKey="UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion/Relacion.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("c05b701f-f136-454f-bf9e-0e528c48f3fa")]
		public virtual Relacion Relacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Relacion)DslModeling::DomainRoleInfo.GetRolePlayer(this, RelacionDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, RelacionDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Relacion of a Tapiz
		/// <summary>
		/// Gets a list of Relacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Relacion> GetRelacion(Tapiz element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Relacion>, Relacion>(element, TapizDomainRoleId);
		}
		#endregion
		#region Tapiz link accessor
		/// <summary>
		/// Get the list of TapizHasRelacion links to a Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion> GetLinksToRelacion ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Tapiz tapizInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion>(tapizInstance, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion.TapizDomainRoleId);
		}
		#endregion
		#region Relacion link accessor
		/// <summary>
		/// Get the TapizHasRelacion link to a Relacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion GetLinkToTapiz (global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion relacionInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion>(relacionInstance, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion.RelacionDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Relacion not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizHasRelacion instance accessors
		
		/// <summary>
		/// Get any TapizHasRelacion links between a given Tapiz and a Relacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion> GetLinks( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Tapiz source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion>();
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion>(source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion.TapizDomainRoleId);
			foreach ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion link in links )
			{
				if ( target.Equals(link.Relacion) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizHasRelacion link between a given Tapizand a Relacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion GetLink( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Tapiz source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion>(source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion.TapizDomainRoleId);
			foreach ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasRelacion link in links )
			{
				if ( target.Equals(link.Relacion) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.DRQPJPFMAMPracticaDSLTools
{
	/// <summary>
	/// DomainRelationship TapizHasAtributoRelacion
	/// Description for UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("7449b778-6efb-43bf-88dc-7a992e2985dc")]
	public partial class TapizHasAtributoRelacion : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizHasAtributoRelacion domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x7449b778, 0x6efb, 0x43bf, 0x88, 0xdc, 0x7a, 0x99, 0x2e, 0x29, 0x85, 0xdc);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizHasAtributoRelacion link in the same Partition as the given Tapiz
		/// </summary>
		/// <param name="source">Tapiz to use as the source of the relationship.</param>
		/// <param name="target">AtributoRelacion to use as the target of the relationship.</param>
		public TapizHasAtributoRelacion(Tapiz source, AtributoRelacion target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizHasAtributoRelacion.TapizDomainRoleId, source), new DslModeling::RoleAssignment(TapizHasAtributoRelacion.AtributoRelacionDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasAtributoRelacion(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasAtributoRelacion(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizHasAtributoRelacion(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizHasAtributoRelacion(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Tapiz domain role code
		
		/// <summary>
		/// Tapiz domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizDomainRoleId = new global::System.Guid(0x3c63c2f0, 0x0eda, 0x4b57, 0x85, 0x38, 0x46, 0x70, 0x73, 0x58, 0x9b, 0xce);
		
		/// <summary>
		/// DomainRole Tapiz
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion.Tapiz
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion/Tapiz.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion/Tapiz.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "AtributoRelacion", PropertyDisplayNameKey="UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion/Tapiz.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("3c63c2f0-0eda-4b57-8538-467073589bce")]
		public virtual Tapiz Tapiz
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Tapiz)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Tapiz of a AtributoRelacion
		/// <summary>
		/// Gets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Tapiz GetTapiz(AtributoRelacion element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, AtributoRelacionDomainRoleId) as Tapiz;
		}
		
		/// <summary>
		/// Sets Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapiz(AtributoRelacion element, Tapiz newTapiz)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, AtributoRelacionDomainRoleId, newTapiz);
		}
		#endregion
		#region AtributoRelacion domain role code
		
		/// <summary>
		/// AtributoRelacion domain role Id.
		/// </summary>
		public static readonly global::System.Guid AtributoRelacionDomainRoleId = new global::System.Guid(0xc5f67b4c, 0xfd6d, 0x4f4c, 0x8d, 0x51, 0xb9, 0xc8, 0xc6, 0xc3, 0x42, 0xfd);
		
		/// <summary>
		/// DomainRole AtributoRelacion
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion.AtributoRelacion
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion/AtributoRelacion.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion/AtributoRelacion.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Tapiz", PropertyDisplayNameKey="UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion/AtributoRelacion.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("c5f67b4c-fd6d-4f4c-8d51-b9c8c6c342fd")]
		public virtual AtributoRelacion AtributoRelacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (AtributoRelacion)DslModeling::DomainRoleInfo.GetRolePlayer(this, AtributoRelacionDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, AtributoRelacionDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access AtributoRelacion of a Tapiz
		/// <summary>
		/// Gets a list of AtributoRelacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<AtributoRelacion> GetAtributoRelacion(Tapiz element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<AtributoRelacion>, AtributoRelacion>(element, TapizDomainRoleId);
		}
		#endregion
		#region Tapiz link accessor
		/// <summary>
		/// Get the list of TapizHasAtributoRelacion links to a Tapiz.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion> GetLinksToAtributoRelacion ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Tapiz tapizInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion>(tapizInstance, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion.TapizDomainRoleId);
		}
		#endregion
		#region AtributoRelacion link accessor
		/// <summary>
		/// Get the TapizHasAtributoRelacion link to a AtributoRelacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion GetLinkToTapiz (global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoRelacion atributoRelacionInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion>(atributoRelacionInstance, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion.AtributoRelacionDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of AtributoRelacion not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizHasAtributoRelacion instance accessors
		
		/// <summary>
		/// Get any TapizHasAtributoRelacion links between a given Tapiz and a AtributoRelacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion> GetLinks( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Tapiz source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoRelacion target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion>();
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion>(source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion.TapizDomainRoleId);
			foreach ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion link in links )
			{
				if ( target.Equals(link.AtributoRelacion) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizHasAtributoRelacion link between a given Tapizand a AtributoRelacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion GetLink( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Tapiz source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoRelacion target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion>(source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion.TapizDomainRoleId);
			foreach ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.TapizHasAtributoRelacion link in links )
			{
				if ( target.Equals(link.AtributoRelacion) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.DRQPJPFMAMPracticaDSLTools
{
	/// <summary>
	/// DomainRelationship RelacionReferencesAtributoRelacion
	/// Description for
	/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("5c7154e5-2c87-4fd5-af61-71f00a26002e")]
	public partial class RelacionReferencesAtributoRelacion : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// RelacionReferencesAtributoRelacion domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x5c7154e5, 0x2c87, 0x4fd5, 0xaf, 0x61, 0x71, 0xf0, 0x0a, 0x26, 0x00, 0x2e);
	
				
		/// <summary>
		/// Constructor
		/// Creates a RelacionReferencesAtributoRelacion link in the same Partition as the given Relacion
		/// </summary>
		/// <param name="source">Relacion to use as the source of the relationship.</param>
		/// <param name="target">AtributoRelacion to use as the target of the relationship.</param>
		public RelacionReferencesAtributoRelacion(Relacion source, AtributoRelacion target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(RelacionReferencesAtributoRelacion.RelacionDomainRoleId, source), new DslModeling::RoleAssignment(RelacionReferencesAtributoRelacion.AtributoRelacionDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public RelacionReferencesAtributoRelacion(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public RelacionReferencesAtributoRelacion(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public RelacionReferencesAtributoRelacion(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public RelacionReferencesAtributoRelacion(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Relacion domain role code
		
		/// <summary>
		/// Relacion domain role Id.
		/// </summary>
		public static readonly global::System.Guid RelacionDomainRoleId = new global::System.Guid(0x0e8cfdac, 0x7a7b, 0x42c1, 0x87, 0x6a, 0xcf, 0x24, 0x18, 0x1d, 0x51, 0xdf);
		
		/// <summary>
		/// DomainRole Relacion
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion.Relacion
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion/Relacion.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion/Relacion.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "AtributoRelacion", PropertyDisplayNameKey="UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion/Relacion.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("0e8cfdac-7a7b-42c1-876a-cf24181d51df")]
		public virtual Relacion Relacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Relacion)DslModeling::DomainRoleInfo.GetRolePlayer(this, RelacionDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, RelacionDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Relacion of a AtributoRelacion
		/// <summary>
		/// Gets Relacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Relacion GetRelacion(AtributoRelacion element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, AtributoRelacionDomainRoleId) as Relacion;
		}
		
		/// <summary>
		/// Sets Relacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetRelacion(AtributoRelacion element, Relacion newRelacion)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, AtributoRelacionDomainRoleId, newRelacion);
		}
		#endregion
		#region AtributoRelacion domain role code
		
		/// <summary>
		/// AtributoRelacion domain role Id.
		/// </summary>
		public static readonly global::System.Guid AtributoRelacionDomainRoleId = new global::System.Guid(0x04b5dac8, 0xae0a, 0x48dd, 0x89, 0x0f, 0x8e, 0x1f, 0x91, 0x53, 0x18, 0xe5);
		
		/// <summary>
		/// DomainRole AtributoRelacion
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion.AtributoRelacion
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion/AtributoRelacion.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion/AtributoRelacion.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Relacion", PropertyDisplayNameKey="UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion/AtributoRelacion.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("04b5dac8-ae0a-48dd-890f-8e1f915318e5")]
		public virtual AtributoRelacion AtributoRelacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (AtributoRelacion)DslModeling::DomainRoleInfo.GetRolePlayer(this, AtributoRelacionDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, AtributoRelacionDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access AtributoRelacion of a Relacion
		/// <summary>
		/// Gets a list of AtributoRelacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<AtributoRelacion> GetAtributoRelacion(Relacion element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<AtributoRelacion>, AtributoRelacion>(element, RelacionDomainRoleId);
		}
		#endregion
		#region Relacion link accessor
		/// <summary>
		/// Get the list of RelacionReferencesAtributoRelacion links to a Relacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion> GetLinksToAtributoRelacion ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion relacionInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion>(relacionInstance, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion.RelacionDomainRoleId);
		}
		#endregion
		#region AtributoRelacion link accessor
		/// <summary>
		/// Get the RelacionReferencesAtributoRelacion link to a AtributoRelacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion GetLinkToRelacion (global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoRelacion atributoRelacionInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion>(atributoRelacionInstance, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion.AtributoRelacionDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of AtributoRelacion not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region RelacionReferencesAtributoRelacion instance accessors
		
		/// <summary>
		/// Get any RelacionReferencesAtributoRelacion links between a given Relacion and a AtributoRelacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion> GetLinks( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoRelacion target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion>();
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion>(source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion.RelacionDomainRoleId);
			foreach ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion link in links )
			{
				if ( target.Equals(link.AtributoRelacion) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one RelacionReferencesAtributoRelacion link between a given Relacionand a AtributoRelacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion GetLink( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.AtributoRelacion target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion>(source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion.RelacionDomainRoleId);
			foreach ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionReferencesAtributoRelacion link in links )
			{
				if ( target.Equals(link.AtributoRelacion) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.DRQPJPFMAMPracticaDSLTools
{
	/// <summary>
	/// DomainRelationship RelacionIzquiedaReferencesEntidadDerecha
	/// Description for
	/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("21b62140-7b1c-4e9c-960a-adb06ac61ea6")]
	public partial class RelacionIzquiedaReferencesEntidadDerecha : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// RelacionIzquiedaReferencesEntidadDerecha domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x21b62140, 0x7b1c, 0x4e9c, 0x96, 0x0a, 0xad, 0xb0, 0x6a, 0xc6, 0x1e, 0xa6);
	
				
		/// <summary>
		/// Constructor
		/// Creates a RelacionIzquiedaReferencesEntidadDerecha link in the same Partition as the given Relacion
		/// </summary>
		/// <param name="source">Relacion to use as the source of the relationship.</param>
		/// <param name="target">Entidad to use as the target of the relationship.</param>
		public RelacionIzquiedaReferencesEntidadDerecha(Relacion source, Entidad target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(RelacionIzquiedaReferencesEntidadDerecha.RelacionDomainRoleId, source), new DslModeling::RoleAssignment(RelacionIzquiedaReferencesEntidadDerecha.EntidadDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public RelacionIzquiedaReferencesEntidadDerecha(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public RelacionIzquiedaReferencesEntidadDerecha(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public RelacionIzquiedaReferencesEntidadDerecha(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public RelacionIzquiedaReferencesEntidadDerecha(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Relacion domain role code
		
		/// <summary>
		/// Relacion domain role Id.
		/// </summary>
		public static readonly global::System.Guid RelacionDomainRoleId = new global::System.Guid(0x7a9e826d, 0x4f96, 0x4dd9, 0x9f, 0x21, 0x96, 0x73, 0xea, 0x86, 0xb5, 0x79);
		
		/// <summary>
		/// DomainRole Relacion
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha.Relacion
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha/Relacion.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha/Relacion.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "EntidadDerecha", PropertyDisplayNameKey="UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha/Relacion.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("7a9e826d-4f96-4dd9-9f21-9673ea86b579")]
		public virtual Relacion Relacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Relacion)DslModeling::DomainRoleInfo.GetRolePlayer(this, RelacionDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, RelacionDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access RelacionIzquierda of a Entidad
		/// <summary>
		/// Gets a list of RelacionIzquierda.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Relacion> GetRelacionIzquierda(Entidad element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Relacion>, Relacion>(element, EntidadDomainRoleId);
		}
		#endregion
		#region Entidad domain role code
		
		/// <summary>
		/// Entidad domain role Id.
		/// </summary>
		public static readonly global::System.Guid EntidadDomainRoleId = new global::System.Guid(0x84f874a0, 0x7fe8, 0x4983, 0xb3, 0x01, 0x45, 0xf7, 0xb8, 0x98, 0xfe, 0xac);
		
		/// <summary>
		/// DomainRole Entidad
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha.Entidad
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha/Entidad.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha/Entidad.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "RelacionIzquierda", PropertyDisplayNameKey="UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha/Entidad.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("84f874a0-7fe8-4983-b301-45f7b898feac")]
		public virtual Entidad Entidad
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Entidad)DslModeling::DomainRoleInfo.GetRolePlayer(this, EntidadDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EntidadDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access EntidadDerecha of a Relacion
		/// <summary>
		/// Gets EntidadDerecha.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Entidad GetEntidadDerecha(Relacion element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, RelacionDomainRoleId) as Entidad;
		}
		
		/// <summary>
		/// Sets EntidadDerecha.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetEntidadDerecha(Relacion element, Entidad newEntidad)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, RelacionDomainRoleId, newEntidad);
		}
		#endregion
		#region Relacion link accessor
		/// <summary>
		/// Get the RelacionIzquiedaReferencesEntidadDerecha link to a Relacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha GetLinkToEntidadDerecha (global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion relacionInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha>(relacionInstance, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha.RelacionDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Relacion not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region Entidad link accessor
		/// <summary>
		/// Get the list of RelacionIzquiedaReferencesEntidadDerecha links to a Entidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha> GetLinksToRelacionIzquierda ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad entidadInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha>(entidadInstance, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha.EntidadDomainRoleId);
		}
		#endregion
		#region RelacionIzquiedaReferencesEntidadDerecha instance accessors
		
		/// <summary>
		/// Get any RelacionIzquiedaReferencesEntidadDerecha links between a given Relacion and a Entidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha> GetLinks( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha>();
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha>(source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha.RelacionDomainRoleId);
			foreach ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha link in links )
			{
				if ( target.Equals(link.Entidad) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one RelacionIzquiedaReferencesEntidadDerecha link between a given Relacionand a Entidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha GetLink( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha>(source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha.RelacionDomainRoleId);
			foreach ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionIzquiedaReferencesEntidadDerecha link in links )
			{
				if ( target.Equals(link.Entidad) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.DRQPJPFMAMPracticaDSLTools
{
	/// <summary>
	/// DomainRelationship RelacionDerechaReferencesEntidadIzquierda
	/// Description for
	/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("7cf46ad3-c9ac-4fdc-af0f-0caa7e57518b")]
	public partial class RelacionDerechaReferencesEntidadIzquierda : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// RelacionDerechaReferencesEntidadIzquierda domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x7cf46ad3, 0xc9ac, 0x4fdc, 0xaf, 0x0f, 0x0c, 0xaa, 0x7e, 0x57, 0x51, 0x8b);
	
				
		/// <summary>
		/// Constructor
		/// Creates a RelacionDerechaReferencesEntidadIzquierda link in the same Partition as the given Relacion
		/// </summary>
		/// <param name="source">Relacion to use as the source of the relationship.</param>
		/// <param name="target">Entidad to use as the target of the relationship.</param>
		public RelacionDerechaReferencesEntidadIzquierda(Relacion source, Entidad target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(RelacionDerechaReferencesEntidadIzquierda.RelacionDomainRoleId, source), new DslModeling::RoleAssignment(RelacionDerechaReferencesEntidadIzquierda.EntidadDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public RelacionDerechaReferencesEntidadIzquierda(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public RelacionDerechaReferencesEntidadIzquierda(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public RelacionDerechaReferencesEntidadIzquierda(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public RelacionDerechaReferencesEntidadIzquierda(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Relacion domain role code
		
		/// <summary>
		/// Relacion domain role Id.
		/// </summary>
		public static readonly global::System.Guid RelacionDomainRoleId = new global::System.Guid(0x1a43f763, 0x0f03, 0x45b0, 0x8d, 0x08, 0x32, 0x51, 0x6e, 0x1e, 0x95, 0x39);
		
		/// <summary>
		/// DomainRole Relacion
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda.Relacion
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda/Relacion.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda/Relacion.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "EntidadIzquieda", PropertyDisplayNameKey="UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda/Relacion.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("1a43f763-0f03-45b0-8d08-32516e1e9539")]
		public virtual Relacion Relacion
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Relacion)DslModeling::DomainRoleInfo.GetRolePlayer(this, RelacionDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, RelacionDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access RelacionDerecha of a Entidad
		/// <summary>
		/// Gets a list of RelacionDerecha.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Relacion> GetRelacionDerecha(Entidad element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Relacion>, Relacion>(element, EntidadDomainRoleId);
		}
		#endregion
		#region Entidad domain role code
		
		/// <summary>
		/// Entidad domain role Id.
		/// </summary>
		public static readonly global::System.Guid EntidadDomainRoleId = new global::System.Guid(0xe9597ae3, 0x660b, 0x4eef, 0xa6, 0x34, 0xce, 0x43, 0x1c, 0x1e, 0xcd, 0x5d);
		
		/// <summary>
		/// DomainRole Entidad
		/// Description for
		/// UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda.Entidad
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda/Entidad.DisplayName", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda/Entidad.Description", typeof(global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.DRQPJPFMAMPracticaDSLToolsDomainModel), "UPM_IPS.DRQPJPFMAMPracticaDSLTools.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "RelacionDerecha", PropertyDisplayNameKey="UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda/Entidad.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("e9597ae3-660b-4eef-a634-ce431c1ecd5d")]
		public virtual Entidad Entidad
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Entidad)DslModeling::DomainRoleInfo.GetRolePlayer(this, EntidadDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, EntidadDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access EntidadIzquieda of a Relacion
		/// <summary>
		/// Gets EntidadIzquieda.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Entidad GetEntidadIzquieda(Relacion element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, RelacionDomainRoleId) as Entidad;
		}
		
		/// <summary>
		/// Sets EntidadIzquieda.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetEntidadIzquieda(Relacion element, Entidad newEntidad)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, RelacionDomainRoleId, newEntidad);
		}
		#endregion
		#region Relacion link accessor
		/// <summary>
		/// Get the RelacionDerechaReferencesEntidadIzquierda link to a Relacion.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda GetLinkToEntidadIzquieda (global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion relacionInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda>(relacionInstance, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda.RelacionDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Relacion not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region Entidad link accessor
		/// <summary>
		/// Get the list of RelacionDerechaReferencesEntidadIzquierda links to a Entidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda> GetLinksToRelacionDerecha ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad entidadInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda>(entidadInstance, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda.EntidadDomainRoleId);
		}
		#endregion
		#region RelacionDerechaReferencesEntidadIzquierda instance accessors
		
		/// <summary>
		/// Get any RelacionDerechaReferencesEntidadIzquierda links between a given Relacion and a Entidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda> GetLinks( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda>();
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda>(source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda.RelacionDomainRoleId);
			foreach ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda link in links )
			{
				if ( target.Equals(link.Entidad) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one RelacionDerechaReferencesEntidadIzquierda link between a given Relacionand a Entidad.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda GetLink( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Relacion source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.Entidad target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda>(source, global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda.RelacionDomainRoleId);
			foreach ( global::UPM_IPS.DRQPJPFMAMPracticaDSLTools.RelacionDerechaReferencesEntidadIzquierda link in links )
			{
				if ( target.Equals(link.Entidad) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
